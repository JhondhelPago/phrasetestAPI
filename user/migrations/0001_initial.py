# Generated by Django 5.1.1 on 2024-10-05 07:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField()),
                ('is_teacher', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('school_name', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='student_essay',
            fields=[
                ('student_instance_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.TextField(default='None')),
                ('last_name', models.TextField(default='')),
                ('nick_name', models.TextField(default='')),
                ('age', models.IntegerField(default='')),
                ('gender', models.TextField(default='')),
                ('grade_level', models.IntegerField(default=6)),
                ('school_from', models.TextField(default='')),
                ('question1', models.TextField(default='')),
                ('answer1', models.TextField(default='')),
                ('question2', models.TextField(default='')),
                ('answer2', models.TextField(default='')),
                ('question3', models.TextField(default='')),
                ('answer3', models.TextField(default='')),
            ],
            options={
                'db_table': 'student_essay',
                'ordering': ['student_instance_id', 'first_name', 'last_name', 'nick_name', 'age', 'gender', 'grade_level', 'school_from', 'question1', 'answer1', 'question2', 'answer2', 'question3', 'answer3'],
            },
        ),
        migrations.CreateModel(
            name='studentuser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='student_profile', serialize=False, to='user.customeuser')),
                ('username', models.CharField(default='', max_length=80)),
                ('firstname', models.CharField(default='', max_length=80)),
                ('middlename', models.CharField(default='', max_length=80)),
                ('lastname', models.CharField(default='', max_length=80)),
                ('age', models.IntegerField(default=0)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=6, null=True)),
                ('gradelevel', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('school_name', models.CharField(default='', max_length=200)),
                ('institutional_id', models.CharField(default='', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='teacheruser',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='teacher_profile', serialize=False, to='user.customeuser')),
                ('username', models.CharField(default='', max_length=80)),
                ('firstname', models.CharField(default='', max_length=80)),
                ('middlename', models.CharField(default='', max_length=80)),
                ('lastname', models.CharField(default='', max_length=80)),
                ('age', models.IntegerField(default=0)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=6, null=True)),
                ('institutional_id', models.CharField(default='', max_length=20)),
            ],
        ),
    ]
